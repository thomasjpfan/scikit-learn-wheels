parameters:
  name: ''
  vmImage: ''
  matrix: []

jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  variables:
    BUILD_COMMIT: '0.20.3'
    SKLEARN_SKIP_NETWORK_TESTS: '1'
    NP_BUILD_DEP: '1.10.4'
    CYTHON_BUILD_DEP: '0.28.5'
    SCIPY_BUILD_DEP: '1.1.0'
    DAILY_COMMIT: 'master'
    DAILY_BUILD: 'false'
    PYTHON_ARCH: 'x64'
  strategy:
    matrix:
      ${{ insert }}: ${{ parameters.matrix }}
  steps:
    - checkout: self
      submodules: true
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(PYTHON_VERSION)
        architecture: $(PYTHON_ARCH)
      displayName: Set python version
    - script: |
        echo PYTHON %PYTHON_VERSION% %PYTHON_ARCH%
        echo Build Reason %BUILD_REASON%
        python --version
        python -c "import struct; print(struct.calcsize('P') * 8)"
        pip --version
      displayName: Check that we have the expected version and architecture for Python
    - script: |
        # Schedule == nightly builds
        if "%BUILD_REASON%" == "Schedule" (
          if NOT "%DAILY_BUILD%" == "true" (
            exit 0
          )
          set BUILD_COMMIT = %DAILY_COMMIT%
        )
        pushd scikit-learn
        git checkout %BUILD_COMMIT%
        git clean -fxd
        git reset --hard
        popd
      displayName: Checkout commit
    - script: |
        pip install --timeout=60 numpy==%NP_BUILD_DEP%
        pip install --timeout=60 pytest wheel scipy==%SCIPY_BUILD_DEP% Cython==%CYTHON_BUILD_DEP%

        pushd scikit-learn
        python setup.py bdist_wheel
        pip install --pre --no-index --find-links dist/ scikit-learn
        popd

        # run inside another directory to run tests on the installed
        # library
        mkdir tmp
        cd tmp

        # Install the newest version of numpy for the tests: the goal is to ensure
        # that the scikit-learn wheels are binary compatible both with the old numpy
        # version against which they were built and the newest numpy version at the
        # time of the release, that is the version of numpy that users are most
        # likely to use.
        pip install -U --timeout=60 numpy
        # pytest -rs --pyargs sklearn
      displayName: Build and test
    - script: |
        if "%BUILD_REASON%" == "Schedule" (
          if NOT "%DAILY_BUILD%" == "true" (
            exit 0
          )
          set CONTAINER = "sklearn-nightly"
        ) else (
          set CONTAINER = "wheels"
          set UPLOAD_ARGS = "--no-update-index"
        )
        # Upload the generated wheel package to Rackspace
        # On Windows, Apache Libcloud cannot find a standard CA cert bundle so we
        # disable the ssl checks.
        pip install --timeout=60 wheelhouse_uploader
        cd scikit-learn
        python -m wheelhouse_uploader upload \
          --no-ssl-check \
          --local-folder=dist \
          %UPLOAD_ARGS% \
          %CONTAINER%
      displayName: Upload wheels

